{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"作业\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/06/Python%E5%AD%A6%E4%B9%A0%E4%BD%9C%E4%B8%9A/",
            "url": "http://example.com/2023/02/06/Python%E5%AD%A6%E4%B9%A0%E4%BD%9C%E4%B8%9A/",
            "title": "python第一学期实验作业",
            "date_published": "2023-02-06T00:14:40.000Z",
            "content_html": "<h1 id=\"python作业\"><a class=\"markdownIt-Anchor\" href=\"#python作业\">#</a> Python 作业</h1>\n<h2 id=\"第三章\"><a class=\"markdownIt-Anchor\" href=\"#第三章\">#</a> 第三章</h2>\n<p>实验报告一</p>\n<p>实验名称：流程控制</p>\n<p>实验时间：</p>\n<p>实验地点：软件工程实验室二</p>\n<p>实验目的：掌握流程控制操作使用</p>\n<p>实验内容：</p>\n<ol>\n<li>\n<p><strong>编写程序，实现利用 while 循环输出 100 以内偶数的功能。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 初始化数字为 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>number <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 当数字小于等于 100 时，执行循环</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 输出数字</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 增加 2，更新数字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    number <span class=\"token operator\">+=</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204154823413.png\" alt=\"image-20230204154823413\"></p>\n</li>\n<li>\n<p><strong>编写程序，实现判断用户输入的数是正数还是负数的功能。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 获取用户输入的数字，并将其转换为整数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 如果数字大于 0，则为正数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> number <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正数\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 如果数字小于 0，则为负数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">elif</span> number <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"负数\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 否则为 0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204151933536.png\" alt=\"image-20230204151933536\"></p>\n</li>\n<li>\n<p><strong>编写程序，实现输出 100 以内质数的功能。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 循环 2 到 100, 因为 1 不是质数。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 判断是否是质数，如果一个数字能被它的任何一个小于它的数整除，则不是质数。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    is_prime <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            is_prime <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 输出质数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> is_prime<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204154847565.png\" alt=\"image-20230204154847565\"></p>\n</li>\n</ol>\n<p>实验小结：</p>\n<h2 id=\"第四章\"><a class=\"markdownIt-Anchor\" href=\"#第四章\">#</a> 第四章</h2>\n<p>实验报告二</p>\n<p>实验名称：字符串操作</p>\n<p>实验时间：</p>\n<p>实验地点：软件工程实验室二</p>\n<p>实验目的：掌握字符串操作使用</p>\n<p>实验内容：</p>\n<ol>\n<li>\n<p><strong>编写程序，已知字符串 s = ‘AbcDeFGhIJ’，请计算该字符串中小写字母的数量。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">'AbcDeFGhIJ'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 定义计数器 count 用于统计小写字母数量。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 使用 for 循环遍历字符串 s 的每个字符</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 对于每个字符，使用 islower () 方法判断是否为小写字母，如果是则计数器加 1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204154916456.png\" alt=\"image-20230204154916456\"></p>\n</li>\n<li>\n<p><strong>编写程序，检查字符串 &quot;Life is short. I use python&quot; 中是否包含字符串 &quot;python&quot;，若包含则替换为 &quot;Python&quot; 后输出新字符串，否则输出原字符串。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string <span class=\"token operator\">=</span> <span class=\"token string\">\"Life is short. I use python\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 判断是否包含指定字符串</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token string\">\"python\"</span> <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 如果包含，则替换为 \"Python\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    string <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"python\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204154942142.png\" alt=\"image-20230204154942142\"></p>\n</li>\n</ol>\n<h2 id=\"第五章\"><a class=\"markdownIt-Anchor\" href=\"#第五章\">#</a> 第五章</h2>\n<p>实验报告三</p>\n<p>实验名称：组合数据类型</p>\n<p>实验时间：</p>\n<p>实验地点：软件工程实验室二</p>\n<p>实验目的：掌握组合数据类型</p>\n<p>实验内容：</p>\n<ol>\n<li>\n<p><strong>已知列表 li_num1 = [4, 5, 2, 7] 和 li_num2 = [3, 6]，请将这两个列表合并为一个列表，并将合并后的列表中的元素按降序排列。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义列表 li_num1 和 li_num2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>li_num1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>li_num2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 合并两个列表并赋值给 li_num3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>li_num3 <span class=\"token operator\">=</span> li_num1 <span class=\"token operator\">+</span> li_num2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 将 li_num3 中的元素降序排列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>li_num3<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>li_num3<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155003969.png\" alt=\"image-20230204155003969\"></p>\n</li>\n<li>\n<p><strong>已知元组 tu_num1 = (‘p’, ‘y’, ‘t’, [‘o’, ‘n’])，请向元组的最后一个列表中添加新元素 “h”。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义元组 tu_num1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tu_num1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 获取元组中的列表，并向其中添加新元素 \"h\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>li_temp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>tu_num1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>li_temp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"h\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 将列表转换为元组，并赋值给 tu_num1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>tu_num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>li_temp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tu_num1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图:</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155024701.png\" alt=\"image-20230204155024701\"></p>\n</li>\n<li>\n<p><strong>已知字符串 str= ‘skdaskerkjsalkj’，请统计该字符串中各字母出现的次数。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义字符串 str</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'skdaskerkjsalkj'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 定义字典 dic，用于存储字母出现的次数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 遍历字符串，统计字母出现的次数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#首先定义了一个字典 dic ，用于存储字母出现的次数。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#接着，使用 for 循环遍历字符串 str 中的每个字符。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#对于字符串 str 中的每个字符，通过 dic.get (s, 0) 获取当前字符 s 在字典 dic 中的数量。如果字典 #dic 中没有存储该字符的数量，则返回默认值 0。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#紧接着，将字符 s 在字典 dic 中的数量加一。即 dic [s] = dic.get (s, 0) + 1。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#每次循环结束后，字典 dic 存储了字符串 str 中每个字符的数量。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#循环结束后，字典 dic 中的内容就是字符串 str 中各字母出现的次数。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    dic<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dic<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155049797.png\" alt=\"image-20230204155049797\"></p>\n</li>\n<li>\n<p><strong>已知列表 li_one = [1,2,1,2,3,5,4,3,5,7,4,7,8]，编写程序实现删除列表 li_one 中重复数据的功能。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义列表 li_one</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>li_one <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 将列表转换为集合，删除重复数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>li_one <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>li_one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>li_one<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155108652.png\" alt=\"image-20230204155108652\"></p>\n</li>\n</ol>\n<h2 id=\"第六章\"><a class=\"markdownIt-Anchor\" href=\"#第六章\">#</a> 第六章</h2>\n<p>实验报告四</p>\n<p>实验名称：函数</p>\n<p>实验时间：</p>\n<p>实验地点：软件工程实验室二</p>\n<p>实验目的：掌握函数操作使用</p>\n<p>实验内容：</p>\n<ol>\n<li>\n<p><strong>编写函数，输出 1~100 中偶数之和。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sum_of_even_numbers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    计算1~100中偶数之和</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 初始化和</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    total <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 遍历 1~100 的数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 如果是偶数，加到总和</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            total <span class=\"token operator\">+=</span> i</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> total</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sum_of_even_numbers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155139669.png\" alt=\"image-20230204155139669\"></p>\n</li>\n<li>\n<p>*<em> 编写函数，计算 20<em>19</em>18*…<em>3 的结果。</em></em></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">factorial_of_20_to_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    计算20 * 19 * 18 * ... * 3的结果</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 初始化结果</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 从 20 到 3，递减遍历数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        result <span class=\"token operator\">*=</span> i</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>factorial_of_20_to_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155159634.png\" alt=\"image-20230204155159634\"></p>\n</li>\n<li>\n<p><strong>编写函数，判断用户输入的整数是否为回文数。回文数是一个正向和逆向都相同的整数，如 123454321、9889。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_palindrome</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    判断一个整数是否为回文数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 将整数转换为字符串，并与字符串反转后的数比较是否相等</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_palindrome<span class=\"token punctuation\">(</span><span class=\"token number\">123454321</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_palindrome<span class=\"token punctuation\">(</span><span class=\"token number\">9889</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155221979.png\" alt=\"image-20230204155221979\"></p>\n</li>\n<li>\n<p><strong>编写函数，判断用户输入的三个数字是否能构成三角形的三条边。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_triangle</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    判断三个数字是否能构成三角形的三条边</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 三角形的任意两边长度之和大于第三边长度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">></span> c <span class=\"token keyword\">and</span> b <span class=\"token operator\">+</span> c <span class=\"token operator\">></span> a <span class=\"token keyword\">and</span> c <span class=\"token operator\">+</span> a <span class=\"token operator\">></span> b</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_triangle<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_triangle<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155303567.png\" alt=\"image-20230204155303567\"></p>\n</li>\n<li>\n<p><strong>编写函数，求两个正整数的最小公倍数。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    求两个数的最大公约数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> b<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">lcm</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    求两个数的最小公倍数</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> b <span class=\"token operator\">//</span> gcd<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 示例调用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lcm<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出：12</span></pre></td></tr></table></figure><ul>\n<li><code>gcd</code>  函数求两个数的最大公约数，使用辗转相除法实现。</li>\n<li><code>lcm</code>  函数求两个数的最小公倍数，使用两个数的乘积除以最大公约数实现。</li>\n</ul>\n<p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155352008.png\" alt=\"image-20230204155352008\"></p>\n</li>\n</ol>\n<h2 id=\"第七章\"><a class=\"markdownIt-Anchor\" href=\"#第七章\">#</a> 第七章</h2>\n<p>实验报告五</p>\n<p>实验名称：文件与数据格式化</p>\n<p>实验时间：</p>\n<p>实验地点：软件工程实验室二</p>\n<p>实验目的：掌握文件的基本操作使用</p>\n<p>实验内容：</p>\n<ol>\n<li>\n<p><strong>设计一个 Circle（圆）类，该类中包括属性 radius（半径），还包括 init ()、get_perimeter ()（求周长）和 get_area ()（求面积）共三个方法。设计完成后，创建 Circle 类的对象求圆的周长和面积。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Circle 类，表示圆形</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 初始化方法，确定圆的半径</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 求圆的周长</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_perimeter</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">3.14</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>radius</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 求圆的面积</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_area</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">3.14</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">**</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 创建 Circle 类的对象</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>circle <span class=\"token operator\">=</span> Circle<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 调用圆的周长和面积的方法</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周长：\"</span><span class=\"token punctuation\">,</span> circle<span class=\"token punctuation\">.</span>get_perimeter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"面积：\"</span><span class=\"token punctuation\">,</span> circle<span class=\"token punctuation\">.</span>get_area<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155416305.png\" alt=\"image-20230204155416305\"></p>\n</li>\n<li>\n<p><strong>设计一个 Course（课程）类，该类中包括 number（编号）、name（名称）、teacher（任课教师）、location（上课地点）共 4 个属性，其中 location 是私有属性；还包括 init ()、show_info ()（显示课程信息）共两个方法。设计完成后，创建 Course 类的对象显示课程的信息。</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Course</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"课程类\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> teacher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"初始化属性number，name，teacher\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> number</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>teacher <span class=\"token operator\">=</span> teacher</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>__location <span class=\"token operator\">=</span> <span class=\"token string\">'未知'</span> <span class=\"token comment\"># 私有属性 location</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">show_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"显示课程的信息\"\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'课程编号：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'课程名称：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'任课教师：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>teacher<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'上课地点：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>__location<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 创建课程类的对象，并显示课程信息</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>course <span class=\"token operator\">=</span> Course<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'语文'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张老师'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>course<span class=\"token punctuation\">.</span>show_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实验效果截图：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/cao-jvm/picbed/master/picgo/image-20230204155448761.png\" alt=\"image-20230204155448761\"></p>\n</li>\n</ol>\n<h2 id=\"第八章\"><a class=\"markdownIt-Anchor\" href=\"#第八章\">#</a> 第八章</h2>\n<ol>\n<li>\n<p><strong>编写程序，计算圆的面积，若半径为负值则抛出异常（圆的面积公式：</strong></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>π</mi><msup><mi>r</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mtext>。</mtext></mrow><annotation encoding=\"application/x-tex\">S=\\pi r^2)。\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">。</span></span></span></span></span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"圆半径非法异常类\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">calculate_circle_area</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    计算圆的面积</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    参数:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    radius -- 圆的半径</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    返回值:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    圆的面积</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> radius <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 半径小于 0，抛出异常</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">raise</span> CircleException<span class=\"token punctuation\">(</span><span class=\"token string\">\"半径不能为负数\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 计算圆的面积</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    area <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> radius <span class=\"token operator\">**</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> area</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 测试程序</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    radius <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入圆的半径: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    area <span class=\"token operator\">=</span> calculate_circle_area<span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"圆的面积为: \"</span><span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">except</span> CircleException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"错误: \"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "作业"
            ]
        }
    ]
}